[
  {
    "id": 1,
    "title": "SOLID Principles",
    "shortDes": "Five design principles of object-oriented programming",
    "longDes": "An in-depth exploration of advanced React 19 patterns, focusing on object-oriented design principles and practical implementation.",
    "metadata": {
      "tags": ["solid", "java", "oops", "design patterns", "architecture", "backend"],
      "date": "2023-10-15"
    },
    "imageUrl": "https://raw.githubusercontent.com/vkpatne/data/main/vjs-website/tile-images/solid.jpg",
    "links": {
      "medium": "https://medium.com/@vupatne/solid-principles-oops-98d6d90bfa86"
    }
  },
  {
    "id": 2,
    "title": "Pydantic",
    "shortDes": "Unlocking Data Validation with Pydantic in Python.",
    "longDes": "Data validation and type checking are essential components of building robust and error-resistant applications...",
    "metadata": {
      "tags": ["pydantic", "python", "data validation", "type hints", "fastapi", "backend", "data modeling", "serialization"],
      "date": "2023-08-15"
    },
    "imageUrl": "https://raw.githubusercontent.com/vkpatne/data/main/vjs-website/tile-images/pydantic.png",
    "links": {
      "medium": "https://medium.com/@vupatne/unlocking-data-validation-with-pydantic-in-python-561bc881e01c",
      "github": "https://github.com/vkpatne/AgenticAILearning/tree/main/1-Pydantic"
    }
  },
  {
    "id": 3,
    "title": "AutoGen",
    "shortDes": "AutoGen Architecture: In-Depth Exploration",
    "longDes": "AutoGen v0.4 is a framework for building multi-agent AI systems with an asynchronous, event-driven architecture...",
    "metadata": {
      "tags": ["autogen", "multi-agent", "llm", "ai architecture", "openai", "langchain", "ai-ml","ai", "python"],
      "date": "2023-08-15"
    },
    "imageUrl": "https://raw.githubusercontent.com/vkpatne/data/main/vjs-website/tile-images/autogen.png",
    "links": {
      "medium": "https://medium.com/@vupatne/autogen-architecture-in-depth-exploration-c62e1f65e306",
      "github": "https://github.com/vkpatne/AgenticAILearning/tree/main/6-Autogen"
    }
  },
  {
    "id": 4,
    "title": "Linear Regression",
    "shortDes": "Linear Regression Explained: A Beginner’s Guide to AI and Predictions",
    "longDes": "Logistic Regression is a powerful yet simple algorithm for binary classification problems.\n\n It transforms a linear relationship into a probability score using the sigmoid function, ensuring stable predictions even with varied datasets. By combining the sigmoid function, log loss, and gradient descent optimization, logistic regression provides accurate and interpretable results.\n\n When paired with proper evaluation metrics, it becomes a reliable choice for tasks like spam detection, medical diagnosis, and exam pass/fail predictions.",
    "metadata": {
      "tags": ["ai architecture", "ai", "ai-ml", "python","Linear Regression","Cost Function","Gradient Descent","Machine Learning"],
      "date": "2025-08-02"
    },
    "imageUrl": "https://raw.githubusercontent.com/vkpatne/data/main/vjs-website/tile-images/linear-regression.png",
    "links": {
      "medium": "https://medium.com/@vupatne/linear-regression-explained-a-beginners-guide-to-ai-and-predictions-27ef5c310d0d",
      "github":"https://github.com/vkpatne/machine_learning/blob/main/LinearRegression/linear_ridge_lasso_regression.ipynb"
    }
  },
  {
    "id": 5,
    "title": "Ridge and Lasso Regression",
    "shortDes": "Understanding Ridge and Lasso Regression in simple way.",
    "longDes": "Ridge and Lasso regression are powerful tools to improve model performance and avoid overfitting. Ridge (L2) reduces the magnitude of coefficients, while Lasso (L1) can eliminate irrelevant features entirely. Choosing the right method and tuning λ ensures a balance between accuracy and generalization, leading to robust predictive models.",
    "metadata": {
      "tags": ["ai architecture", "ai", "ai-ml", "python","Ridge Regression","Lasso Regression","Overfitting","Machine Learning"],
      "date": "2025-08-03"
    },
    "imageUrl": "https://raw.githubusercontent.com/vkpatne/data/main/vjs-website/tile-images/ridge_lasso.jpg",
    "links": {
      "medium": "https://medium.com/@vupatne/understanding-ridge-and-lasso-regression-3ce40ffeeb7e",
      "github":"https://github.com/vkpatne/machine_learning/blob/main/LinearRegression/linear_ridge_lasso_regression.ipynb"
    }
  },
  {
    "id": 6,
    "title": "Logistic Regression",
    "shortDes": "Logistic Regression: A Beginner’s Guide to Classification",
    "longDes": "Linear regression is one of the simplest yet most powerful techniques to start your AI and Machine Learning journey. It helps us predict outcomes by finding the best-fit line between data points, using cost functions and gradient descent to optimize model accuracy. \n\n While linear regression works well for straightforward relationships, it also builds the foundation to understand complex models like multiple regression and other machine learning algorithms.\n\nMastering these basics will not only help you analyze data trends but also prepare you to tackle more advanced AI and ML concepts with confidence.",
    "metadata": {
      "tags": ["ai architecture", "ai", "ai-ml", "python","Classification Algorithms","Logistic Regressiont","Machine Learning"],
      "date": "2025-08-03"
    },
    "imageUrl": "https://raw.githubusercontent.com/vkpatne/data/main/vjs-website/tile-images/logistic-regression.png",
    "links": {
      "medium": "https://medium.com/@vupatne/logistic-regression-a-beginners-guide-to-classification-e4d5536150a2",
      "github":"https://github.com/vkpatne/machine_learning/blob/main/LogisticRegression/logistic_regression.ipynb"
    }
  }
]
